{"name": "test_addToCartAndDeleteTwo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001052ded3c chromedriver + 4222268\n1   chromedriver                        0x00000001052658e8 chromedriver + 3725544\n2   chromedriver                        0x0000000104f1bda4 chromedriver + 277924\n3   chromedriver                        0x0000000104f571b8 chromedriver + 520632\n4   chromedriver                        0x0000000104f8f618 chromedriver + 751128\n5   chromedriver                        0x0000000104f498f0 chromedriver + 465136\n6   chromedriver                        0x0000000104f4a974 chromedriver + 469364\n7   chromedriver                        0x00000001052af788 chromedriver + 4028296\n8   chromedriver                        0x00000001052b3c1c chromedriver + 4045852\n9   chromedriver                        0x00000001052b9c98 chromedriver + 4070552\n10  chromedriver                        0x00000001052b48d8 chromedriver + 4049112\n11  chromedriver                        0x000000010528bd84 chromedriver + 3882372\n12  chromedriver                        0x00000001052d2720 chromedriver + 4171552\n13  chromedriver                        0x00000001052d2878 chromedriver + 4171896\n14  chromedriver                        0x00000001052e6014 chromedriver + 4251668\n15  libsystem_pthread.dylib             0x000000019038606c _pthread_start + 148\n16  libsystem_pthread.dylib             0x0000000190380e2c thread_start + 8", "trace": "self = <test.test_Amazon.AddToCart testMethod=test_addToCartAndDeleteTwo>\n\n    @pytest.mark.run\n    def test_addToCartAndDeleteTwo(self):\n        HomePage.search_product(driver, productTwo)\n        ProductPage.sort_by(driver, descendingIndex)\n>       ProductPage.select_product(driver, time)\n\ntest/test_Amazon.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc/pages/product_page.py:17: in select_product\n    WebDriverWait(self, time).until(lambda d: d.find_element(By.XPATH, ProductPage.secondProductBTN))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"87f747ec4623583f9b73ea28aa1192c6\")>\nmethod = <function ProductPage.select_product.<locals>.<lambda> at 0x1047a8ea0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001052ded3c chromedriver + 4222268\nE       1   chromedriver                        0x00000001052658e8 chromedriver + 3725544\nE       2   chromedriver                        0x0000000104f1bda4 chromedriver + 277924\nE       3   chromedriver                        0x0000000104f571b8 chromedriver + 520632\nE       4   chromedriver                        0x0000000104f8f618 chromedriver + 751128\nE       5   chromedriver                        0x0000000104f498f0 chromedriver + 465136\nE       6   chromedriver                        0x0000000104f4a974 chromedriver + 469364\nE       7   chromedriver                        0x00000001052af788 chromedriver + 4028296\nE       8   chromedriver                        0x00000001052b3c1c chromedriver + 4045852\nE       9   chromedriver                        0x00000001052b9c98 chromedriver + 4070552\nE       10  chromedriver                        0x00000001052b48d8 chromedriver + 4049112\nE       11  chromedriver                        0x000000010528bd84 chromedriver + 3882372\nE       12  chromedriver                        0x00000001052d2720 chromedriver + 4171552\nE       13  chromedriver                        0x00000001052d2878 chromedriver + 4171896\nE       14  chromedriver                        0x00000001052e6014 chromedriver + 4251668\nE       15  libsystem_pthread.dylib             0x000000019038606c _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x0000000190380e2c thread_start + 8\n\nvenv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "start": 1680181079497, "stop": 1680181099854, "uuid": "e7dec69b-df89-4038-8e7e-67b20495351e", "historyId": "18273b897b63c8d7f4a3b381cc9dc71c", "testCaseId": "3b3d41c739e4984395342ee21dac3fcf", "fullName": "test.test_Amazon.AddToCart#test_addToCartAndDeleteTwo", "labels": [{"name": "tag", "value": "run"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_Amazon"}, {"name": "subSuite", "value": "AddToCart"}, {"name": "host", "value": "MacBook-Air-de-victor.local"}, {"name": "thread", "value": "26407-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_Amazon"}]}